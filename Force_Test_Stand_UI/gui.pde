/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void drop_serial_click(GDropList source, GEvent event) { //_CODE_:drop_serial:314369:
  println("drop_serial - GDropList >> GEvent." + event + " @ " + millis());
  
  COM_PORT = source.getSelectedIndex();

} //_CODE_:drop_serial:314369:

public void bttn_serial_open_click(GButton source, GEvent event) { //_CODE_:bttn_serial_open:612085:
  println("bttn_serial_open - GButton >> GEvent." + event + " @ " + millis());
  COM_PORT_NAME = Serial.list()[COM_PORT];
  arduino.open(COM_PORT_NAME);

} //_CODE_:bttn_serial_open:612085:

public void txt_average_changed(GTextField source, GEvent event) { //_CODE_:txt_average:323696:
  println("txt_average - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:txt_average:323696:

public void txt_std_dev_changed(GTextField source, GEvent event) { //_CODE_:txt_std_dev:970016:
  println("txt_std_dev - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:txt_std_dev:970016:

public void bttn_flush_clicked(GButton source, GEvent event) { //_CODE_:bttn_flush:640586:
  println("bttn_flush - GButton >> GEvent." + event + " @ " + millis());
  arduino.close();
  exit();
} //_CODE_:bttn_flush:640586:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  drop_serial = new GDropList(this, 10, 60, 127, 115, 4, 10);
  drop_serial.setItems(loadStrings("list_314369"), 0);
  drop_serial.addEventHandler(this, "drop_serial_click");
  bttn_serial_open = new GButton(this, 140, 60, 80, 20);
  bttn_serial_open.setText("Connect");
  bttn_serial_open.addEventHandler(this, "bttn_serial_open_click");
  lbl_heading = new GLabel(this, 10, 10, 204, 40);
  lbl_heading.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_heading.setText("Force Test Stand");
  lbl_heading.setOpaque(false);
  txt_average = new GTextField(this, 90, 160, 120, 20, G4P.SCROLLBARS_NONE);
  txt_average.setOpaque(true);
  txt_average.addEventHandler(this, "txt_average_changed");
  lbl_Data = new GLabel(this, 10, 120, 80, 20);
  lbl_Data.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_Data.setText("Statistics");
  lbl_Data.setOpaque(false);
  lbl_avg = new GLabel(this, 10, 160, 80, 20);
  lbl_avg.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_avg.setText("Average");
  lbl_avg.setOpaque(false);
  lbl_std = new GLabel(this, 10, 190, 80, 20);
  lbl_std.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_std.setText("Std Dev");
  lbl_std.setOpaque(false);
  txt_std_dev = new GTextField(this, 90, 190, 120, 20, G4P.SCROLLBARS_NONE);
  txt_std_dev.setOpaque(true);
  txt_std_dev.addEventHandler(this, "txt_std_dev_changed");
  bttn_flush = new GButton(this, 270, 60, 80, 30);
  bttn_flush.setText("FLUSH/EXIT");
  bttn_flush.addEventHandler(this, "bttn_flush_clicked");
}

// Variable declarations 
// autogenerated do not edit
GDropList drop_serial; 
GButton bttn_serial_open; 
GLabel lbl_heading; 
GTextField txt_average; 
GLabel lbl_Data; 
GLabel lbl_avg; 
GLabel lbl_std; 
GTextField txt_std_dev; 
GButton bttn_flush; 
